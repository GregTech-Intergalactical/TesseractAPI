buildscript {
    repositories {
        maven { url 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        gradlePluginPortal()

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
    }
}

plugins {
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: "com.github.johnrengelman.shadow"


apply plugin: 'java'

archivesBaseName = 'tesseractforge'
version = "0.0.1"
group = "com.github.gregtech-intergalactical"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: "${mappings_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tesseractforge {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tesseractforge {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'tesseractforge', '--all', '--output', '"' + rootProject.file('src/generated/resources/') + '"',
                    '--existing', '"' + sourceSets.main.resources.srcDirs[0] + '"'

            mods {
                tesseractforge {
                    source sourceSets.main
                }
            }
        }
    }
}

assemble.dependsOn shadowJar

configurations {
    deobf
    embed
    implementation.extendsFrom(embed)
}

shadowJar {
    configurations = [project.configurations.embed]
}

// Deobfuscated jar; development purposes.
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
task deobfJar(type: ShadowJar) {
    from sourceSets.main.output
    configurations = [project.configurations.embed]
    classifier "deobf"
    //dependsOn gradle.includedBuild("tesseract").task(":deobfJar")
}

task sourcesJar(type: ShadowJar, dependsOn: classes) {
    description = 'Creates a JAR containing the source code.'
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
    archives deobfJar
}

repositories {
    jcenter()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    embed project(':tesseract')//(group: 'com.github.gregtech-intergalactical', name: 'tesseract')
}


publishing {
    publications {
        forge(MavenPublication) {
            //artifactId = archivesBaseName
            artifact deobfJar
            artifact shadowJar
        }
    }
    //repositories {
    //    rootProject.configurePublishingRepositories(delegate)
    //}
}

jar {
    zip64 true
}